  Program:

Input -> Computation -> Output

Language:
C --> Haskell (functional spectrum)
C --> Python (ease of use spectrum)

C --> C++

GC

What is a computer:
Processor (stream of instructions)
RAM(Instructions + Data)

example : hello world programming >> 그러니까 터미널을 이용해서 hello world를 출력하는 프로그램을 C로 구현하고 그걸 데이터 베이스에서 어떻게 이루어 지는지 확인 하면서 설명한다. 
명령 자체와 같은 메모리 공간이 있다. 

int main() {
  printf("hello world"\n);
}

Program:
.text = Instructions
stack = local vars (control flow)
bss = Static Data
heap = malloc

void a() {
  int variable_on_the_stack;
  // return by popping off the stack
  }
 void b(){
 }

int main() {
  a(); // pushes the return location to the stack
  b();
}

Programming for work!

Whta does a sofeware engineer do?
>> 직접 알고리즘을 작성하는 것은 아니다
- Don't write algorithms

기본적으로 이들은 번역가이다.
Translators:
"Business Requirements" -> "Code"

example: Ruby on Rails = "Web apps"
CRUD apps <-- Create, Read, Update, Delete

Forntend (View)
Business Logic(Controller)
Database (Model)

What you will learn in bootcamp
for example : 부트 캠프에 간 사람은 comma ai 에서 일자리를 얻지 못합니다.
이런 작업을 수행하지 않기 때문이다.

이 멍청한 패러다임은 곧 ai로 대체될것 같다.
백 스페이스의 로우 브로우 버전을 작성하고 싶다면

1. Build a CRUD app contracting firm
2. Record all the inputs of my developers
3. Train AI model to translate "Business Logic" -> "Code"

이건 정말 쓰레기다 약간의 돈을 받을 수는 있다. 그냥 복사 기계같은 느낌이다.

기본적으로 컴퓨터에 대해 아무것도 모르고 
Ruby
React
(heavy framework) 그냥 이상한 구문을 외워서 하는 거다.
좀 더 재밋는걸로 가자.

what is hacking?

Input -> System -> Output

What input to the system achieves my desired outcome?

해킹이 많이 발생하는 이유는 시스템을 확인하지 않는것
내가 보내는 것이 무엇이고 시스템이 작동하는 것을 이해해야한다.

Domain -> Fuction -> Range
y= f(x)
>> 순수한 모델이다.
대부분의 계산은 불확실성이 있다. 무언가를 완전히 이해할 수 있는 범위 내에서 출력해야한다.

Figuring out how to make the function behave how you want.

입력 시스템 출력이 원하는 대로 잘 되나
입력을 잘제어하는지 잘 호출할수 있는지
시스템의 경계에서 완전히 벗어난 일을 할 수 있다.
내가 말하는건 입력 시스템 출력의 패러다임이다.

프로그래밍을 잘하는 방법이 무엇인가? 많이 물어봅니다. 하지만 나는 뭘 원해서 물어보는것인지 잘 모르겟다.
모든 웹 사이트에서 부트 캠프가 작동하는 crud 앱을 알려줍니다.

이 기본 아이디어를 연습해라 >> 해킹을 잘하기 위해서는

경쟁 프로그래밍은 어떤것에 관한것이 아니다. 
새로운 알고리즘을 만들수 있다.
패턴인식을 알게된다. >>이것은 실제로 그래프 동형 문제이다.

cdfs는 여전히 재밌다.
지능테스트라고 하기에는 너무 반복적인 속임수다.
일주일에 40시간은 연습하면 충분히 가능하다.

해킹과 코딩은 모두 새로운 기술을 배우고 적용하는 것입니다.

반복은 괜찮은 것에 반한다.

내가 이틀전에 한 방송에서의 clang에 for 루프를 추가한 곳
이정도만 해도 많은 돈을 받을 수 있다.

High Brow Sofeware Engineering
--- 이라는것
1.Understand a complex system
2.Modify the system to add a feature >. 기능을 추가하도록 시스템을 수정한다.
3.Ship the new system (test well and stuff) > 테스트 웰과 같은 의미의 새로운 시스템을 제공합니다.

>> 소프트웨어 엔지니어링과 같은 많은 계약이 있다.

clang for loop 챌린지 처럼 ( 내가보여준) 스스로에게 도전해봐라.

ML 엔지니어가 되고싶다.
Machine Learning Engineer
----
1. Download a paper 
2. Implement it >> 그것을 구현해서
3. Keep doing this until you have skills >> 이 기술을 가질때까지 이걸 계속하라.

all exmaple:
How to get a girlfriend
----

Define "get a girlfriend"

Input -> System -> Output

Women -> "female mind" ->
  iMessage saying "so we're officiall now right?"
 
1. 100: Messages sent to woemen
30%
2. 30:Replies
1/6 = 18%
3. 5:Dates
40%
4. 2:Lays
50%
5. 1:Girlfriend
  
Funnels ( 깔때기)
----
고전적인 판매이다.

Sell Cars

1. 10,000 Top of the funnel (advertising to many)
1%
2. 100: Visit the dealership
5%
3. 5: Buy cars

>> vim 레슨은 아니다.

Getting money
----

Capitalism (자본주의 ) is based around consent.

Buyer
Seller

Both parties must consent to the transaction. 

Getting money in a capitalist system: // 자본주의 체제에서 돈을 벌어
  Convince oothers to give it to you. // 당신에게 돈을 주도록 설득하느 것이다.
  
How do you make $1,000,000 from a product?
----

$1 from 1,000,000 people
- Online only
%1,000 from 1,000 people
- A couple phone calls can be spend closing the deal

%1,000,000 from 1 person
 -Tons can be spent closing the deal 

now make it look fancy put a lambo on the background and post to instagram is the new warrent buffett
>> I mean but like this stuff is so simpele

기본적으로 알아햐 한다. 여기 오래 앉아서 입력할수있다.
컴퓨터가 작동하는 방식이다. 이게 -- 이러한 컴퓨터 같은 사고방식으로 프로그래밍을 해야된다는 말인가?

Instagram is based around consent.

Follower

Infllluencer >> 이런 구조가 기본적인 경제학의 구조다.

Convince 1,000,000 people to subscribe to you

1. Appealing content ( 콘텐츠로 어필한다.)
  "Novelty"
  "Beauty"
  "Sexuallity"
  "Funny"
  
2. Be famous ( 어제 내 일을 기억한다면 좋은 방법이다.
  FOMO <-- fear (실종에 유명한 사람) (of missing something positive)
  
  "car crash" <-- fear of missing something negative)
  
3. Dark arts
  Buy followers
    Cracked accounts
    New accounts
  Make your insta private
    What's behind the curtain?
      (follow to find out)

동적 프로그래미이에 대해서 설명해 달라
다이나믹 프로그램을 위한 그래픽을 만지는 사람들
기본적인 아이디어는 당신이 어떤 기능을 가지고 있다고 말하는 것이다.

output = f(x, y)

f(x, y):
  f(x-1, y-1)

Wasting time:
----

Existentialism -- you make your own meaining

실존주의

자기 철학은 시간낭비 같은 것은 없다는 것이다.
멍청한 것처럼 시간 낭비를 하는 것은 대단하다.

Don't fall in funnels. >> 다른 사람들의 깔대기에 빠지지 마라.
Don't be in skinner boxes. >> 스키너 상자 안에 잇지 말고 영향을 받지 마세요.
Don'tbe influenced by advertising. >> ''

알고리즘 복잡성을 설명할 수 있습니까?
What is a algorithm complexity

그래프 >> 생각하는 방식

정렬은 일반적으로 복잡성에 대해 생각하는 좋은 방법이다.

버블 정렬에 대해서 알아보자.

bubble sort: O(n^2)
for i in 1..n:
  for j in+1..n:
    if j < i:
      swap arr[i] and arr[j]
>> 따라서 다른 정렬 알고리즘을 기본적으로 가지고 있는 다른 정렬 알고리즘을 사용할 수 있습니다.
만약에 내가 아는 목록을 정렬 하고 싶다.
>> 이 루프는 n 루프인데 n 제곱 정렬 알고리즘이다.
tree:

n inserts into a log(n) sized tree // n 삽입 로그인 크기의 트리이므로 실제로 정렬 알고리즘이 있습니다.

7 3 4 6 10 5

height: log(n)
--   7
-- 3    10
--    4
--  5  6

0(n * log(n)) >> n log n 시간에 있는 알고리즘은 기본적으로 이것의 변형이 있습니다.

O(n) sort: // 해시 정렬인지 이름이 뭔지 모르겠어요
1 and 100

int cnt[100];
for i in 0..n:
  cnt[arr[i]] += 1
for i in 0..sizeof(cnt):
  print("i" * cnt[i]) // n으로 가는 하나의 루프가 있고 다음으로가는 하나의 루프가 있습니다.
  
배열의 가장 큰 요소가 배열의 길이와 함께 정렬은 n의 o가 아니라 가정합니다.
100이 항상 n이지만 보통은 가장 작은 종류는 

우리는 도약 코드를 해결하지 않는다.

이진 검색 시간 복잡성을 설명 할 수 있습니까?

binary search: // 이진검색 
find an element in a sorted list

n=7 // 여기서 n 은 7보다 훨씬 작습니다.

O(log(n)) // 이진 검색이 로그 n 시간의 O를 실행하도록 배열

// 해킹을 많이 하는 것
오라클이 있다고 합시다.
67을 찾고 싶다고 해보자
1 7 9 22 45 67 98
검색 67
bsearch(arr, 67): // b 
  lo = 0 //low
  hi = len(arr) // high

  
  arr[mid] is 2 
  lo = mid
  
  
  // 그러면 일단 그걸로 간추려 지는데 배열에 mid가 22라고 가정해 보면 
  일단 67은 22보다 크므로 이 중 1,7,9중 어느 것도 될 수 없다고 안다.
  그러면 이제 low = mid 라고 말할 수 있다.
  그렇게 추려지면 밑에 처럼 된다.

22 45 67 98 // 이진 검색의 첫번째 실행

bsearch(arr, 67): // b 
  lo = 0 //low
  hi = len(arr) // high

  arr[mid] is 45 
  lo = mid
 
 // 다시 가정해보면 mid는 45이고 low 와 mid 가 같다는 것을 알 수있다.

다시 실행

45 67 98 

mid = 67 // 이번엔 미드가 67 이다. 

나무 정렬 처럼 비슷하게 생각할 수 있습니다. 
대신 하나의 경로가 정렬 된 대신 연속적으로 나열되는 목록은 얼마나 많은 점프를 할 것인지
로그인 트리를 가져와야 합니다.

초급 ML 엔지니어가 잘 구현할 수 있는 종이는 무엇입니까?

초보 ML 엔지니어를 구현할 수 있는 문서
>> 잘 모르겠다. 데이터 과학은 대부분 bs이다.
당신이 배우고 있다면 당신을 가르치는 사람 객체 수준의 기술처럼 옳은 것을 배우지 못할 것이다.
도구가 사라지면 객체 수준 기수리이 사라진다.
하지만 메타 수준의 기술을 배우고 있다면 그런 다음 그들은 결코 이건 세상에 대한
진실 같아 넌 배우고 있니?

Are you learning something from nature?
Good
Are you learning something from people?
Bad

Data Science:
-- stats < -- sure 데이터 과학이 의미한다면
-- tooling used at company x <-- no 데이터 과학이 사용된 도구와 의미가 같나?
-- tooling that will go out of vogue <--no 유행에서 벗어날 도구를 알고있다 아니..

데이터가 무엇인지 질문에 답하는 것과 같습니다.



물리학처럼 배우는 경우에 패러다임은 자연 학습에서 비롯됩니다.
유명인 가십을 배우고 있다면 물리학이 좋다.
사람들에 대한 임의의 헛소리는 나쁘다.

대학의 창립 테마중 하나를 알고 우리는 사람들에 대한 권력을 거부합니다.

College
---

Reject power over people
-Ignored by the system
-System cares deeply about power over people

--- 
자연에 대한 힘을 받아 들여라
Embrace power over nature

양의 실수 부분이 있는 복잡한 s에 대해 f를 정의합시다.

함수의 모든 0을 어떻게 찾습니까?
riemann 가설처럼 이상하게 보이는..
내 수학 지식의 대부분은 이산 수학에 있다.
잘 몰라

미적분에는 시뮬레이터를 작성할 수 있다는 것을 의미하는 방법을 정말 모른다.
그런 다음 함수가 연속적이라고 가정하고 0을 이진 검색 할 수 있습니다.

우리는 정확히 이진 검색을 할 수 없습니다.

잘 모르겟다.

배고픈 상태를 유지하는 방법에 어떤 책을 추천합니까?
elon은 이것에 대해 많이 말하고 있으므로 지식 트리를 만들고 싶습니다.

Build a Knowlege tree
----

--New information fits into the tree // 내가 만난 사람들이 많은 것을 알고있는 그런 사람들이 항상
그들이 아는것도 아니고 

-- "interpolation" is possible //일부 노드가 있으면 나무의 메모가 무엇인지 정확히 알지 못하더라도
근처에서 바로 보간 할 수 있습니다. ( 두개 이상의 객체를 연결할 수 있다.
그래서 그것은 일종의 프레임 워크다.
-- Framework for understanding

Elon roots knowledge tree in Physics (modernist)
I roots knowledge tree in Information (postmodernist)

두가지 모두 좋은 방법이다.

How to explain anything?

여자 친구에게 올바른 입력 시스템 출력을 얻는 방법이 내 핵심이다.
무엇이든 이해하기위한 패러다임

Bezos // 베조가 기본적으로 이것을 사용합니다.
----

Operations mastermind:

Amazon ships many packages
"Amazon shipping plan" is "sales pitch" to UPS // 아마존은 UPS라는 것을 사용한다.
UPS gives real rate
Bezos wins // 이게 바로 아마존의 속임수다.

그것은 전체 세계이고 나는 그것을 이해하기 위해 최선을 다합니다.

나는 항상 그곳에서 관광객이 될 것 같아.

내가 어렸을 때 다르게 하고 싶었던 한 가지는
사실 나는 거의 완전히 거부하지 않았다
인문학,,, 그런 애들은 트롤들임
자라면서 깨달았을 때 대학과 특이점
과학은 중요하지 않습니다. 역사상 비극은 믿을 수 없을 만큼 똑똑한 과학자들이
핵폭탄을 발사한 다음 그 폭탄을 그들에게 복종하는 정치인에게 넘겨주엇다.
왜 이것이 왜 정치이니이나 그런 종류의 사람들은 이 힘을 가지고 있나
그래서 역사를 통틀어 변하고 있는 것 사람들에 대한 권력이다.

Power over people used to be everything.
Hunter gatherer tribe 
만약 당신이 부족에 살았다면 수렵채집이나  
당신을 알파 침팬지로 만든 것은 다른 침팬지들에 대한 힘을 가지고 있었다는 것입니다.
자연에 대한 힘이 없는 넌 10배 더 나은 사냥꾼이 아니야
10배 더 나은 사냥꾼은 없었지만 사람들을 지배하는 힘은 약해지고

Power over People is waning
Power over Nature is waxing ( waxing 겉보기 크기를 늘려서)

내가 엄청난 것이 있다는 것을 깨닫기 시작했을 때
회사를 운영하는 것이 무엇인지
ceo는 당신이 하는 모든 것을 이야기하는것이다. 그렇게 하는 것을 이야기 하는 것이고 우리는 경쟁한다.
이 이야기의 경쟁

이런 것들이 요즘 오프 스트림에서 하고 있는 많은 일중에 하나다. 특히 지금은 독서일 뿐 이고
해킹에 미래가 없어요 그리고 프로그래밍에는 미래가 거의 없습니다. 특이점이 발생한다면 언제
그리고 그것은 어떻게 보일 것이고 그것이 어떻게 보일것 같습니까?
그런트를 하는 프로그래머들에 의해 훨씬 덜 누가 최고의 이야기를 하는지에 따라
세상을 더 잘 구하고 싶다면 이야기하는 법을 배워라

프로그래밍 전문가가 되는 법을 가르쳐주세요
턴 페이퍼는 모두가 꼭 읽어야한다.
// 이 사람들은 어디에나 있기 때문에 모든 생물학자들은 모두 화학자가 되기를 원합니다.
화학자는 물리학자가 되고 싶어하는 반면 물리 학자들은 수학자 모든 수학자는 철학자와 모든 철학자가 되기를
원합니다.
고용되고 싶다.

프로그래머는 번역가에요
이것이 대부분의 소프트웨어 엔지니어가 하루 종일 하는 일입니다.
어리석은 프레임워크를 제데로 배우지만 다시 그것은 나의 데이터 과학에 대해서도 마찬가지다.
유행에서 벗어날 도구를 알고 있습니다.

그게 맞을지도 몰라 

오늘날 우리는 덜 혁신적인 혁신 정신을 가지고 있다고 생각합니까?

>> 확실히 혁명적인 사람들이 있습니다. 
내가 생각하는 가장 혁명적인 사람은 현대에 천년기 나카 모토 사토시

정말 어떤 식으로든 일을 하고 싶다면 익명으로 해야합니다.

엘론머스크가 뭘하는지 보시죠. 확실히 사람들이 있어요
100년 뒤에 기억될 오늘 살아있는 

내가 논문을 읽는 이유 >> 책 추천??

The Annotated Turing
좋은 직업윤리가 무엇인지 추천

그러니 무대에 서서 이렇게 말하는 정치인이 있다면 아이들은 우리의 미래입니다.
아이들이 정말로 말하지 않는 것을 걱정합니다.

난 당신이 아무거나 해야한다고 말하는 것이 아닙니다.

그것은 단지 프레임 워크 일 뿐입니다. 생각에

질문에 답하는데 정말 관심이 없습니다. 내 자신에

나도 그렇고 너도 아무도 아니다.

재귀에 대해 (stack)

신중한 개발은 사라질 것입니다.
현재 개발은 가장 낮은 공통 분모가 될것입니다.
글쎄요, 저는 엔지니어들로부터 물건을 가져와서 
고객과 나는 엔지니어에게 바로 제공합니다.
그게 다야

구성주의에 대한 나의 이해

당신은 법의 법칙을 제외된 중간은 적용되지 않습니다. 그래서 당신은 가정을 할 수 없습니다.
모순을 찾아서 가정이 사실이라고 말하십시오
뭔가 사실이라고 말하고 싶다면 그냥 할 수 없다고 말하면 안된다고 그래 모순을 찾아서 
finitism 처럼 나는 깊은 철학적 의미에서 진실이라고 믿는다.
구성주의는 또 다른 렌즈에 불과한거다.

비 구성주의 수학에서 무엇을 말할 수 있습니까?
당신이 구성 주의자로 말할 수 없거나 더 어려운 증명...
수학자에서 제외 된 중간의 원칙을 취하면 망원경을 처방하는 것과 같은 말 천문하기자 또는
그의 주먹 사용 상자

아 구조는 Google이 실제로 나에게 줄 것입니다
이것에 대한 무엇이든 나는 비 구성 주의적 진실을 원한다.
당신은 구성주의에서 도출 할 수 없습니다

어떤 것들은 학습 이론과 같은 것입니다.
내가 알고 싶은 것은 마치 진실이 옳은 것과 같은 것입니다.


What is money?
---
그 누구에게도 결코 최종 목표가 아니라는 것입니다.
돈을 버는 것은 최종 목표가 될 수 없습니다.
돈 자체에는 내재적 가치가 없습니다.

항상 당신의 터미널 가치가 옳은지 생각하십시오
정복되지 않은 국가를 상상하는 것은 충분히 쉽습니다.

무언가 강한 충격을 주는 무언가를 사람들에게 주어야합니다.

둘째, 누군가의 규칙을 포함해서 규칙을 따르지 않거나 반대하는 경우
모든 시민들은 그것을 죽이기 위해 단결해야 합니다.

사람들은 이러한 규칙이 전통에 의해 충분히 확립되엇다고 가정합니다.
당신이 그렇지 않으면 다른 사람들이 당신을 죽일 것이라는 것을 알기 때문에 하루 그들은 다른 모든 사람들이 그들을 죽일 수는 없습니다.

러시아인들이 탈북을 막기위해 비슷한 전술을 사용했다고 들었습니다.
제2차 세계대전 당신은 정면에 군인을 알고 기관총 포탑을 충전하라는 지시를 받은 라인은
다른 방법으로는 모든 사람의 일이라는 것을 알고 있습니다.
그들 뒤에 모든 겁쟁이를 쏘고 겁쟁이를 쏘지 않으면
겁쟁이가 되고 다른 사람에게 총을 맞을 것입니다.
독재없는 디스토피아 그러니 당신이 정말로 돈을 원하는지 생각해보세요
왜냐하면 우리는 정말로 이러한 독재자 디스토피아 중 하나에
그래서 내 시청자 수가 줄어들었고 겁쟁이는

러시아 시슽메은 우리가 혁신적인 아이디어를 가지고 있습니까?

파이가 무한에 자리에 들어갈수 있는 것을 증명할수 있는가?
이건 고전적인 것이다. 하지만 당신이 이것을 충분히 증명할 수 있습니다.

새로운 세대가 낮은 수준과 같은 것을 배우기를 기대하는 곳 < 대학>
프로그래밍이나 이론 같은 곳에서 다른 사람들이 무슨 말을 했는지
사람들은 항상 컴퓨터 과학에 대해 이렇게 말합니다.

실제로 컴퓨터가 작동하는 방식을 배우지는 않을 것입니다.
왜 우리 수학 전공자들은 산술이 어떻게 작동하는지 모르기 때문에
누군가 교육을 잘 못 받았다는 신호일뿐
사람들이 이렇게 말하는 세상에서 페이드를 좋아하지 않을 것입니다.
당신은 너무 많은 다른 분야가 있다는 것을 알고 있으며 왜 그들이
컴퓨터 과학이
다른 건지

배울게 너무 많아서 근사치를 모르겠다...

웹사이트의 진실성 
그냥 진실만을 쉽게 전달해주는 사이트인지
아니면 그렇지 않은지

대학은 이보다 훨씬 더 닮은 웹 사이트를 갖게 될 것입니다.

컴퓨터 아키텍처 또는 정량적 접근 방식을 살펴 보겟습니다
대학은 깔때기 사회의 깔때기

컴퓨터 아키텍처를 공부하고 싶다면 이것이 예다 라면서 어떠한 특정한 책의 목차를 보여줌
이건 구글에서 온건데
l1 캐시에 도달하는 데 10 나노초 정도 걸립니다.
l2에 도달하는 데 100나노초는 메모리에 도달하는 데 마이크로 초가 걸립니다.
디스크에 도달하는 데 1밀리 초 정도 걸립니다.

그 모든 메모리 계층 구조를 이해한다는 것을 아십시오.

컴퓨터 과학에 두가지 어려운 문제가 있는 것처럼
검색 및 캐싱 또는 that is quote 어떤 정보에서 인용했다

백스페이스로 인한 문제
Backspace
---

우리의 현대적인 프로그래밍 언어는 이미 원하는 것을 설명하는 가장 좋은 방법

Are modern Programming languages already the best way to describe what you want?

How much can "automated programming" help?

for example:
  프로그램이 실제로 설명하는 것이 무엇인지
  아마도 더 나은 방법인 더 간결한 언어가 있습니까?
  더 간결한 것이 있습니까?
  Does there exist a more concise programming language?
  
  aka what is the next GC?
  
  객체 지향 프로그래밍은 개선 사항을 제공하지 않았습니다. >> 이말은 더이상 나아질 방향이 없고 이미 거의 완벽한 상태다?
  
  수집은 당신의 자유를 다룰 필요가 없었습니다.
  
  메모리.. 음 내가 말하는 건 내 기본 논문은 컴파일러가 더 많은 검색을 해야한다는 것입니다.
  
  Compilers should do more search.
  
  gc is garbage collection.
  
  내가 c코드를 작성하면 함수를 만들어 보자.
  
  char *a() {
    char *ret = (char *)malloc(6);
    strcpy(ret, "hello");
    return ret;
}

int main() {
  int i=0;
  while (1){
    char *c = a();
    if (i%10000 == 0) printf("%s\n", c);
    free(c);
    i++;
  }
}
  
  닷 아웃의 메모리를 보세요
  메모리 사용량이 증가하고 있으며 유지하기 전에 죽여야합니다.
  메모리 누수가 있기 때문에 더 많이 사용
  이 프로그램에서 일어나는 일은 a가 호출 될때마다 6바이트의 메모리를 사용하고 있스빈다. 6바이트를 사용하고 있습니다.
  합에서 떨어져서 이 while 루프가 다시 돌아 오더라도 바이트는 절대 접근 할 수 없습니다. 컴파일러는 프로그램이 이미 할당 했으므로 이 문제를 해결해야합니다.
  
그래서 너는 이걸로 버그를 수정할 수 있습니다. free(c); <<
이제 메모리 사용량이 증가하지 않음을 알 수 있습니다.
gc가 자동으로 도달 할 수 없는 포인터를 찾아 해제합니다.

그래, 녹은 별개의 아이디어를 가지고 있습니다. russ는 소유권에 대한 아이디어를 가지고 있습니다.
하지만 녹을 코딩하기 매우 어렵게 만듭니다.

gc의 장점은 백그라운드에서 완전히 작동하고 실행하기에 유효한 프로그램이 됩니다.
나는 이것을 go에 쓰고 gc로 갈 수 있으며 괜찮습니다.
데이터를 출력하는 가장 짧은 프로그램을 찾을 수 있다면 

문자열 복사를 null 없이 문자 배열로 전달하면 어떻게 되나요?
계속 복사해야해
그것을 찾을때까지 스택에 무엇이든지 터미네이터

우리가 언어를 작성하기에 효율적이지 않다는 표시입니까?
근본적으로 다른 함수형 프로그래밍이있을 때
내말은 음, 나아지고 있어 난 아주, 내가 코드에 뭘 줄지 알 잖아
20년 후의 언어 너무 행복 할거야

지속적인 성장을 해결하는 방법을 알고 잘못된 정보 내말은 그 비율이 실제로 있었다.
더 나쁜 것은 정보의 비율이 잘못된 정보가 변경되었는지 잘 모르겠습니다.

어떻게 동기를 부여 받나요?
왜 그렇게 생각하지? 멍청한 질문입니다.
어떤 것이 멍청한 질문인지 아닌지가 구조가 무엇인지 생각하는 것과 같다면
당신이 원하는 대답의 어떤 종류의 구조와 같은 공간은 무엇입니까 범위는 어떻게 생겼습니까?
출력 공간은 어떻게 생겼습니까? 당신은 Google을 받을 자격이 있는 사람입니다.
의욕을 유지하기 위한 이상한 속임수 때문에 당신이 거기에서 찾고있는 것이고 그것이 당신이 갈 유일한 대답입니다. 실제 답이 아니므로
호기심에 만족하고 당신은 같은 쓰레기를 계속 인터넷 검색을 할 것입니다. 몇 번이고 몇번이고 대답이 없어
계층 및 정보 배포가 적습니다.
나는 그것에 대해 확신하진 않는다.

그러니 어떤면에서 더 많은 계층이 있다고 생각해보세요.
오 괜찮아요 제가 찾을 수 있는지 알아 볼게요 색인 할 좋은 방법이 있었으면 좋겠어요
그들이 책에 넣은 정확한 인용구를 찾아 보겠습니다.
가족은 비진리와 흔히 공유되는 거짓말에 대해 사람들이 많이 말 했음에도 불구하고 내 관점에서
어떤 방식으로든 잘못된 정보를 사람들은 가짜 뉴스에 대해 비명을 지르고 있습니다.
그들은 잘못된 정보에 대해 계속 이야기 하고 있습니다.
내러티브는 더 이상 새로운 내러티브가 오래된 내러티브보다 덜 사실 오래된 내러티브도 모두 거짓말입니다.
새로운 이야기를 제공하는 다른 종류의 그룹이 있습니다.
새로운 내러티브는 다른 곳에서 온다 옛날 이야기보다 조금 더 사실이라고 생각하지만 약간

송곳니 인터뷰를 크랙하라는 조언 솔직히 그들이 당신을 앉히고 두가지 리드 코드 어려운 문제를 
이것이 제가 여러분을 위해 스트림에서 리드 코드를 하지 않는 이유입니다. 왜 그들이 시간을 낭비하는게 아니라는것을 기억하면서
그냥 모욕하는 건 내말은 모두에게 모욕적이라고 생각한다.
누가 인터뷰를 하고 있는지 확인하지 않는 것처럼 당신이 좋은 프로그래머인지 아닌지 그들은 당신이 몇시간, 몇시간동안 갈아서
오른쪽 삭제 코드 갈기는 진짜 같은 조직의 종류입니다. 당신을 소중히 여기는 조직에서 일하고 싶어합니다.
어리 석고 무관한 것을 몇시간 동안 연마.. 음, 프로그래밍 문제는 놀라운 방법이라고 생각합니다. 
후보자를 판단하지만 시간이 맞지 않은 것 우리는 좋아 또는 적어도 사람 앞에서 시간이 부족하지 우리는 comma에 대한
해킹 도전이 있습니다. 음, 하지만 우리는 당신에게 4시간을 줍니다. 당신이 좋다면 당신은 시간 같은건 설계되지 않았습니다.
신입생 제초기 테스트를 위해 설계되었습니다. 이것이 우리가 진정으로 판단하는 방법입니다.
스피드 챌린지 그래 난 스피드 챌린지 좋아해 더 개방적이지만 더 명확한 엄격한 평가기준을 가져오는 것이 중요합니다.
편견을 피하기 위해 명확한 평가 기준이 있는 인터뷰 암페타민을 복용하지마라 각성제는 당신이 일을 더 잘하게 만들지 않는다는 것입니다.
그들은 당신이 일을 더 잘한다고 생각하게 만듭니다. 그들은 망상을 촉발하고 내가 뭔가를 잘한다면
내가 뭔가를 잘한다고 믿고 싶다. 내가 뭔가에 나쁘다고 믿고 싶어 nootropics는 대부분 사기입니다.
저는 인문학이 내부의 구조와 계층을 벗어날 수 있을 것이라고 생각합니다.
트랜스 휴머니즘과 싸우는 자연은 나는 확실하지 않다. 정확히 그게 무슨 뜻인지
정직은 깊은 생각을 주지 않습니다. 깊이 나는 더 긍정적인 말이었다. 암페타민에 대해 내가 하는 것보다 lsd가 당신에게
뭔가를 보여준 것 같아요 내 말은 당신이 아는 모든 약과 같다 무엇을 가르쳐야하는지 이해 한다음 멈춤
10일간의 명상 수련회에 가고싶어요
하지만 마약에 대해 얘기하고 싶지 않아요 그들은 마약이 아닙니다.
그 흥미로운
나 자신에 대해 이야기하는 것을 좋아합니다.
나 자신에 대해 이야기하고 내 아내를 위해 일화를 제공합니다. 요점을 설명하는 것이 더 많습니다.
왜냐하면 제가 제 자신에 대해 말하는 것은 개인적이고 쓸모 없어 나처럼 굴지 마 바보야

당신이 생각할 수 있도록 내가 당신에게 정보를 주고 화이트 노이즈.. 일부 이야기는 구성되어 있습니다.

불법 복제의 도덕성 나는 보편적인 도덕성 또는 윤리를 믿지 않습니다.
너 자신의 마음에 들어라
음, 노력하는 사람은 있지만 설교하려는 사람은 싫어합니다.
당신의 도덕성 또는 윤리는 당신이 어떻게 행동해야하는지 말해 주려고 합니다.
그저 강력한 사람들이기 때문에
도덕적 상대주의자 나는 개인적인 차용을 가지고있다.

---

[Music]

oh

cool

so i was watching um

shkreli's finance lectures

and he gave

lectures with a list of

it's it's kind of financial advice and

he starts out by saying

what is finance he breaks it down into

well okay if you want to get into it you

have a choice you can either invest your

own money or other people's money

um investing your own money probably

only makes sense if you have a lot of it

you need tools to uh

right like there's no reason you should

be investing your money if somebody else

can invest it better

basically good advice um so i thought

i'd do something similar for programming

i was watching i i googled

how to learn to program

uh let's let's let's do this how to

learn

to program

also again like you guys think i'm on

drugs constantly i'm really not

um i smoke weed occasionally

i drink occasionally i don't really do

harder drugs than that

uh i don't think i've taken adderall or

any other stimulants this year

i don't know why you guys all think that

maybe there's something defective about

my brain chemistry

so i'm not going to teach you vim

if you think you want to learn park type

thank you for subscribing and i'm hoping

to get a lot of subscribers for this

stream because

i'm going to try to educate instead of

just

a lot of times when i talk i'm not

trying to

be made sense of i'm not

i'm trying to i'm thinking out loud and

i'm not trying to

explain things such that an audience

will understand

so we could say yeah look i can tell you

here here's lifehacker.com the best ways

to teach yourself to code

and really it comes down to just doing

it

like almost everything but i think a

question a lot of people have is what

exactly do i do

so let's

let's bring them up here and let's talk

about what a program

is okay so you have a program what's the

definition of a program

well um

you can think about it like this a

program takes in some input

does some computation and produces some

output

so there's an argument to be made that

we should be teaching

kids how to program using functional

languages because functional languages

more closely match this paradigm

but computers don't operate

like functions computers operate a lot

more like turing machines which we can

get into too so maybe

on one side of an extreme uh we have

like a high-level functional programming

language like haskell

and then let's not really go lower than

c c and assembly r

c and assembly are the same structurally

so you can treat c and assembly like the

same thing see this kind of assembly

with a bit of syntactic sugar around it

there's nothing in c that doesn't very

clearly map

to something in assembly um

please subscribe i hope you guys like

this kind of content okay

so let's say like languages uh span the

gamut

from c uh over to haskell right

um then you can take languages and

languages go in a few directions

you can think of this as like the

functional spectrum

uh and then maybe there's c over to

python

and this is kind of the ease of use

spectrum

so in the 90s it was believed that

object oriented programming

was going to be this revolution in

programming that's c going to c

plus plus right um basically and

you can take it even further microsoft

created these things called

com objects and everything was going to

be an object

to pass around small talk has this kind

of paradigm also

but it turned out this didn't actually

improve programmer productivity

the thing that improved programmer

productivity was garbage collection

so when you think of a computer first i

mean we kind of have to ask the question

what is a computer

so

you can think about it like you have a

processor that runs a stream of

instructions

and then you have ram um

now you can break ram into two things

there's two things stored in ram there's

instructions

and there's data so most computers

really don't treat these things

very differently when i

make a program like hello world

and i compile this we can take a look

in this program

and that's not even all of it

yeah uh so we have a

this section here this is actually the

ascii for hello world

so it's in the same memory space

um as the instructions itself which does

the

printing of hello world here's the main

function it's called a dialed stub

binder is actually what calls the printf

um so yeah what is a computer uh

processor and ram

um then you can break down

your program so when you have a program

a program has text it's called dot text

which is the instructions

a program has a stack program has a heap

and a program has bss

right so bss are things like um

static data uh there's a stack and then

there's a heap

heaps you get to through malik stacks

you get to through

uh you know anything like

this is a variable on the stack

local vars also control flows on the

stack

right if i have a main function and i

call

a what this does is

pushes the return location

to the stack

so you know when i call b down here

um this at the end here is returned by

popping off

stack okay so this is a basic idea of

what a computer is

now there's a whole other direction you

can go with the idea of what is

programming

right there is a

practical like i want to get a job

right um programming for work

uh maybe we'll make a note too we'll

call programming for

so what does this mean what does a

software engineer do

well they don't really write algorithms

um you will never in any job have to

write

a sort algorithm a binary search

algorithm

anything like that um so they don't

write algorithms

um what else well

very few people actually work on uh

there's some people who work on

infrastructure but that's not a lot of

people

most software engineers are basically

translators

right and they translate a language

uh maybe we'll call the language

business requirements

into code

and there's a whole lot of frameworks

which exist

to make writing things

that meet business requirements easier

if you think of a business requirement

like you know we need a web page that's

going to

allow users to say leave a phone number

where we can call them back right

there's a lot of frameworks that are

designed to do things like that

if you wanted to write something on that

you could use something like ruby on

rails right

and that's why uh i hate when

does that i don't actually know right

for like you know uh web apps

um there's also this paradigm of

crud apps and you get what crud stands

for

uh the four basic types of sql command

create read

update delete all right

uh so let's say we want to build

ruby on rails or similar um

for web apps and you're basically

creating an app that looks like

create read update delete there's some

front end uh the view

there's some database which is the model

and then there is the

uh business logic

which is a controller

so let's say the front end is let's go

back to that um

i want to build a portal

where my customers can uh

add their phone number such that we'll

be able to call them

they have to be able to update their

phone number due to gdpr

they have to be able to delete their

profile you can see how it translates to

this right

um so this isn't this is terrible

you you're not just the same way the

word doctor means so many things a

doctor is someone who diagnoses a doctor

someone who prescribes a doctor or

someone who has bedside manner

um a software engineer

like it's kind of misleading and it's

almost nothing

like what you do in school if you're in

school and you're learning

um how to write binary search algorithms

it's nothing like what you do in

practice what you do in practice is

really you're translating

from a really shitty language um

into these things that are like code and

i meet these people and this is what

you're going to learn

um what you will

learn in boot camps right

um so for example

no one who's ever gone to a boot camp

would ever give get a job at comma ai

because at comma you don't do this um

nothing at comma looks like this

this stupid paradigm and this is the

thing that's going to

be replaced pretty soon by by ai's

i think about writing this

like if you want to write the low brow

version of backspace

backspace is

basically this i mean so here step one

build

a crud app

contracting firm

step two

record all the

inputs of my contract

developers i don't know just say

contract developers will make fun of

someone full-time

uh developers uh train

ai model to translate

business logic into code

right translators

um so yeah if you guys are thinking

uh about a job like this

you know it's it's it's really it's

really trash work

uh you can get paid some amount of money

doing it

but your your your monks used to do this

monks used to like spend time copying

they'd have to before they were

printing presses they'd have to well

someone's got to copy the bible so

that's practically what you're doing

it's not very um

you know it's kind of trash right uh so

notice how none of this

go back to this guy here none of this

has anything to do with this they're

completely separate things

a software engineer a lot of these

people who i meet who are software

engineers

know basically nothing about computers

uh what they know about

is how to translate this shitty language

into code is almost giving it too much

credit

um and then here so let's think of like

like

ruby uh react right

um think of all all the very heavy

frameworks

it almost has nothing to do with

programming and it's like you're

memorizing weird syntax of of

something uh stupid right um

so let's talk about things that are that

are more interesting

all right so uh i come from uh

i learned this stuff from from my kind

of hacking background

um what is happening well so

again programs have input

computation output

so if you want to attack the system

we'll call this a system right

if you want to say get like a uh you

want to get like remote code execution

on the system

right the question you ask is what

input uh

to the system achieves

my uh desired

outcome okay

um so

again a lot of hacking is because like

the the

the system didn't think to check uh for

what it is i'm sending it and you can

get the system to behave in ways

that aren't uh within the normal bounds

of output

so if you think this is actually a

function right um what are the words in

function you have a domain

which is the input to a function

function range

or like you know y equals f of x right

um

so this is a this is a pure model

um but most computation is impure

uh when it's impure the function doesn't

necessarily have to output something in

the range it can do something entirely

different

um

so yeah i mean what is what is hacking

it's figuring

out how uh

the function uh

you know figuring out how to

to make the function uh behave

how uh you want

um now you can use the same

paradigm to analyze almost

anything right input system output

say you want to uh

say you want to change your flight on

united and you don't want to pay change

fees

well you can think of the input is what

can i do well

i have a i can call i can call the

united customer support line

um the system is the customer support

agent and the output

is them clicking a button on their

computer that says wave change fees

probably written in some cred app right

so if you think about it like that you

think okay how do i get the system

what inputs well what do i have control

over i can make multiple calls

i can change the words that i say on

each call

you can do things that are completely

out of bounds of the system entirely you

can

you know get the person's real name you

can dox them uh you can threaten them

you might go to jail for these things

i'm not advising you do it

but it's it's all within this this

paradigm of input

system output and that's what

what is programming input computation

output

thank you for subscribing uh no no there

is uh

it's starting to get big are we getting

people watching the stream

oh yeah okay now let's get viewers let's

get viewers

so when you ask the question

what is programming how do i get good at

programming

i don't understand what it is that you

want

any any website any boot camp

will teach you functioning crud app

programming

um when it comes down to hacking every

system is different if you want to get

good at hacking you just need to

practice

this basic idea uh remember that

one of the reasons i don't play ctfs

anymore is because it

became too um

boxed uh this is i feel similarly about

about competition programming

competition programming is not about who

can cleverly come up with new algorithms

it's just about

you know pattern recognition okay

recognize that

this is actually a a graph isomorphism

problem

uh i can do graphite some isomorphism

that's that's that's np but oh this is

actually

a a binary search over this and i can

sort the list

in n log n instead of n square and i can

solve it in time right

um yeah so cdfs are still fun

and ctf still like i think there's some

that kind of probably break the paradigm

but a lot of it became the same tricks

over and over again and you just drilled

once you can drill it's no longer a test

of intelligence it's a test of like

you know are you willing to practice are

you willing to put

40 hours into a week into learning some

relatively useful skill

i shouldn't hate on ctfs and they're a

great way to get into this stuff it's

just a thing like like

back in the day ctfs didn't feel as much

like this but competition programming

already did

i have nothing but praise for the time

that i spent doing competition

programming

and learning what there is to learn and

then realizing once you're just going to

be grinding it's time to stop

um

yeah uh hacking and coding is all about

learning and applying new skills so

repetition runs counter to what it's all

about okay

um so if you watch my stream two days

ago

where i did the uh adding the for loops

to clang

that's another you can get paid a lot of

money if you can do this right

um this is kind of what my ethereum

contract was uh

understand so so maybe there's a like

like like high brow software engineering

understand a complex system

modify the system to

say add a feature

ship the new system

meaning like test well and stuff

so there's there's a whole lot of

software engineering kind of contracts

or jobs that look like this understand a

complex system

modify the system to add a feature ship

the new system um if you

make yourself challenges like that clang

for loop challenge that i showed you

you'll get good at uh at this

um you want to be a ml engineer

well here's the steps to get good at

that

download paper

implement it

implement it

keep doing this

until you have skills

ah

no test today slackmage thank you for

subscribing

um

when you guys say i i saw a comment on

one of the on one of the recent youtube

videos where you say

oh if only george would do would do

lessons what is it you want to learn

what is it that that you want to

you want me to do what what what is it

that you think you can't do

um you want how to get a girlfriend

right

uh all right and again let's use the

same

let's use the same the same uh the same

paradigm right

input uh system

output right um so well what are you

going to need is an input to the system

i mean you want a girlfriend you want

you know women um

a system uh like i don't know what you

mean

first can you come up with a definition

uh you know

let's come up with an exact definition

of uh get a girlfriend

right oh not martin's girl's youtube

finance lessons

um all right so first defined get a

girlfriend

now the system is you know uh the the

female mind and let's say the output is

a

uh let's say let's just say it's an

imessage

uh saying uh so we are

uh official now

uh right

right

so i mean you can think about this right

so i mean we can use the same sort of

tricks we used on

uh on the united uh flight attendant

uh you know i'm trying to get the change

fees right like okay

um one thing i've learned studying

pickup

is you don't get better at seducing

women

you just get better at screening women

it's not about convincing women to sleep

with you or date you it's about finding

the women who are already interested in

sleeping with you

or dating you uh so right uh

same sort of approach and you can treat

this like a funnel right so

let's talk about funnels um

[Music]

so this is a classic uh

sales kind of thing uh let's say you

want to

sell cars right same approach same

approach

uh one uh you have the top of the funnel

which is like getting the word out right

you can do this with like advertising

um too many uh you get some people who

visit the dealership

right and this is a funnel let's say

let's say um

let's say a thousand people see your ad

let's say 10 000 people see your ad

um 100 people visit the dealership

uh and let's say you know uh

five by cars right

so what's your your ratio here you have

one percent here and you have a five

percent conversion ratio here

and you're falling off your funnel uh so

you know we can do the exact same thing

here one um

you know 100 uh message

sent to women uh

we can say maybe um 20 replies

uh let's let's let's let's say 30

replies

uh of every one of those we'll say

we have five dates uh

two lays uh one girlfriend right

same same idea right it's just funnels

um so this here is a

thirty percent ratio this is a

uh one whatever that is in percent like

18

um this is 40 percent and this is 50

right

funnels

1.2 k viewers let's go

ah

no you don't want a vim lesson right

that's like

oh how do i make a product that make me

a millionaire okay

all right i'm getting money

well so the thing about getting money uh

is there's only one way to get money

um this is capitalism uh

capitalism is based around consent

right and this is kind of the beauty of

capitalism uh in capitalism you have a

buyer

uh and you have a seller um and both

parties

uh must consent

to the transaction right

uh so if

you want to uh make a million dollars

the only way to get money

getting money um in a

capitalist system

system is one way to do it and it's

convince

uh others to give it to you

right you can't make money you can't

produce your own money

uh there is one way to get money and

that's to convince other people

to to give it to you uh yeah welcome to

welcome to nba bullshit right

um so if you have you know two people

and one guy selling an apple and it's

ten dollars and the other guy's like

i'll give you five dollars for the apple

the seller can now say okay i consent to

your five dollars i don't consent and

there's no transaction

beauty beautiful right um getting money

in the capital system convince others to

give it to you so

to answer your question how do you

get uh make

1 million dollars

from a product well so

you can kind of um all right ready for

some nba bullshit i'll give you some

real mba bullshit

so you can think about who you want to

target your product

all right you can either make one dollar

from one million people

uh you can get one million dollars

uh from one person and then there's a

whole spectrum in the middle let's say a

thousand dollars from a thousand people

right

and you can think about basically how

much effort you're willing to spend on

the sale

in each case right so here you know

tons can be spent

uh closing the deal here maybe

uh one phone call

maybe let's say uh you know a couple

phone calls can be spent closing the

deal

and this can be like online only right

uh so how do you make a million dollars

from a product well you can either

convince

a million people to give you one dollar

you can convince thousand people to give

you thousand dollars or you can convince

one person to give you a million dollars

right there's no other way to do it

now make it look fancy put a lambo on

the background and post to instagram is

the new warren buffett yeah

i mean but like like this stuff is so

simple

okay i i don't know how anybody's stupid

enough to pay for mbas that basically

like like like

like here you go there you go there

there there's

basically everything you need to know

right there's so much complexity and

depth i can sit here and type forever

if you wanted to go into like detail of

how computers work

but nobody seems to care about stuff

like that i don't think that's what you

guys care about

um

out of a million subs in his gym right

all right

um

all right so yeah look

do i know how to do shit like this yeah

sure if i cared right

um

so fundamentally you have to again ah

instagram uh is based around consent

right

uh so you have a uh follower

uh and an influencer right this is the

same it's the same basic

market economics except influencer uh

it's the same basic market economics

uh except

it's not money it's it's it's clout it

doesn't it doesn't really matter

the same basic idea so so how do you how

do you get a million subs an insta well

you know convince

uh one million uh people to subscribe to

you

uh now there's a bunch of ways to do

this right so

uh one way to do it is like with uh

appealing content right uh now there's

lots of different things you can appeal

uh based on you can appeal to

you can appeal to novelty uh you can

appeal to

beauty uh you can appeal to

sexuality um

you can you can appeal to to funny right

uh so i mean that's kind of step one and

if you don't have appealing content

you're not gonna get

uh um step two

is be famous uh so this actually works

if you guys remember my

or this is another way to do it if you

guys remember my thing yesterday

um famous works on on a few different

levels right

so you can say there's there's fomo

famous right like you want you want

people who uh

fear missing out right like oh man i

gotta follow this guy right you can use

so you can use fear basically to get

people to follow you um

there's like the car crash mentality

uh which is similar to fear of missing

out except

you know maybe this is fear of missing

something

uh positive uh fear

of missing something negative right

um all right so you know you can take

like like like uh

maybe kanye west is kind of a mix of

both uh lindsay lohan

is very much in the car crash mentality

um

yeah uh and then there is like um you

know

dark arts all right so you can you can

buy followers

uh these followers come from a few

different places there's cracked

accounts

uh there's big there's big russian uh

people who who crack accounts i think

there's some new accounts

right uh you can do little psychological

tricks like

uh make your insta private

uh if you make your instagram private

you again you're you're appealing to

this uh you know what's behind the

curtain

follow to find out bros

uh

can you explain dynamic programming to

you so go on youtube there's plenty of

people who make great graphics

for for what dynamic programming is um

the basic idea is

say you have some function um

you know you have output uh f of x of y

and you can figure out how to define f

of x of y

in terms of say you know f of x minus

one y minus one right

um dynamic programming is you build up

like a table

uh using the previous outputs uh to to

influence the next outputs

but again you know if you're looking for

an exact

topic like that there's plenty of videos

that'll do a better job explaining it

uh than i can

um i like i don't really know and i'm

going to read some comments now and guys

if you could all i will make it

subscriber only if you guys are writing

stupid crap

is this you guys always say oh i want to

learn i want to learn i want to learn

like what is it that you want to learn

do some garbage collection and explain

what malik is

defcon sold out uh

this is actually a really cool stream

thank you uh here so we have

we have a vip um what not to waste your

time on

okay well let's break that down using

the same sort of

uh uh mentality right

so wasting time

uh so the girl last night on the date

told me a very she has a very

interesting life philosophy

um if you guys know the story about the

fox and sour grapes

the fox is out walking he sees a grape

vine and there's a big

juicy bundle of grapes uh sitting up

there he

puts his paws up on the fence and he

tries to reach it and he can't

um he climbs the fence he starts to

climb the fence

but he cuts his paw and then he's like

you know yeah okay those grapes are

probably sour anyway and he walks away

right um so this is the traditional sour

grape story

and usually people who have this you

know those angry sort of people but

her take on it was when she cut her paw

it must have been a divine sign from god

that the grapes were probably poisonous

it's like a positive spin to the sour

grape story

so i don't know um

you know if you go through life

everything that you don't get you just

realize that you didn't want it anyway

and like you really you

put a positive spin on that this is this

is an impenetrable fortress of

uh psychological i don't know but

um wasting time i don't know

right all right so this gets into like

like uh

existentialism right the basic idea of

existentialism

is uh you make your own

uh meaning all right sorry

now you asked if this is all

existentialism is how did people write

really long books about it

and you'll have to ask those people but

so i don't know

um my personal philosophy

is that there's no such thing as wasting

time

like it's a stupid a time is just

wasting time is great

this is the point of time to waste it um

you know maybe maybe i'll add a caveat

to that

don't fall uh in funnels right

um if you are in other people's funnels

um don't be in

skinner boxes

skinner boxes all right

maybe uh um don't fall in funnels

don't be in skinner boxes and don't uh

be influenced

by advertising

can i explain algorithmic complexity

sure um

again let's let's let's see if there's

good content on this already

before i do it uh what is

algorithmic complexity

algorithmic complexity is a measure of

how long an algorithm would take to

complete given input of size n if an

algorithm has to scale it should compute

the result with a finite and practical

time bound even for large values of n

for this reason complexity is calculated

asymptotically as n approaches infinity

that's what big o notation is

well complexity is usually in terms of

okay

um so this is a way of thinking about it

ah how many

operations does it take for an input of

size n

right so you can take sorting algorithms

sorting is usually a good way

to think about complexity um

so you can take like a bubble sort

algorithm right uh

bubble sort in pseudocode is

uh something along the lines of for i in

uh one to n uh for j

in uh i to n

uh or let's say i plus one to n if j

is less than i swap

ah

all right um so

this algorithm is o of n squared

because you see this loop start from

zero i'm not writing lua or nothing

um so this loop is n this loop you can

be like well no the average is actually

n over two but you know

n times n over two is is is uh you know

it's still o of n squared right so this

is an o of n squared sorting algorithm

so you can take other sorting algorithms

other sorting algorithms basically have

this idea of we're going to build up a

tree

so say i want to sort the list you know

three five

four six right um we take a tree

we put seven on the top branch right and

now we say three is three

uh less than or equal to seven

uh it's less than so we'll put it on

this side of the tree okay

and now we do the same thing with four

so we say well okay let's take four four

less than or equal to seven it's less

than seven less than or equal

to three it's it's greater than three so

it goes here right

um six we have the same kind of well

this turned out to not work too well uh

because the height of this tree is

n but let's say i added something like

10 in you know 10 would go here in the

tree

and make my tree too nice uh let's say i

added a five

in right the five would go here in the

tree and the size of this tree

the height of this tree uh is login

right um so that's all the sort

algorithms that are in n log n time

uh basically have some variant of this

right so it's it's it's n

inserts into

a login sized tree

so there are actually sorting algorithms

that run

in o n

ah so we can think about

let's say the list that i'm sorting is

only

um is guaranteed to only be numbers

between one and one hundred

so i can create a maybe something like

hash sort or something

uh i don't know what the name of it is

but oh then sort

so i can create an array like count

sub 100 for

i and 0 to n count sub arr

sub i

plus equals one

right and then i can loop through count

and then i say uh for

well you know just like print um

you want to print out basically the like

like the number

uh count number of times

right um so you see how this is of m

i have one loop going to n and then i

have one loop going to

to to count which can be viewed as like

uh

as like a k and k is small uh

but this obviously only works if your

your total number here

is small uh because the k

if these biggest element in the array

were to grow um

with the length of the array then the

sort would not be o of n but assuming

that it stays at 100

uh this sword is always of n but usually

the smallest sort is ammon

i think maybe that explains it better

than this

no we're not solving any leap codes

um

i'd like to see you improve and open

source system that you'd like to see

improve and follow along as you help

progressing

issues and features people don't want to

learn they want to have your skills yeah

they can get fucked

can i explain binary search time

complexity sure

so binary search

find an element in

a sorted list

something i say is hacking a lot of

times is uh is just binary search by

hand

right um so let's say

let's say let's say you have an oracle

uh

or or you know we'll just we'll just do

it straight up right uh so here's the

sorted list right

um

let's make

all right let's say i want to find 67

right um

so b search 67.

so you start out with defining a uh

a a a low and a high uh so we'll make

the low

uh the beginning of the array and the

high

the length of the array

so i now take the midpoint

let's say i look at the array array

submit is 22.

now i know that it can't possibly

be any of these right so here's my pivot

i say it can't possibly be any of these

because 67 is greater than 22

so we can now say low equals mid

so now i'm just looking at this array

here

so that's the first run of binary search

right um

so again low zero highest length of

array

mid low plus high equals two let's say

mid is one uh so we get 45

low equals mid all right so now now

we're doing it again

uh for this uh and this time mid

is 67 all right run it through so we can

return that we can

figure out what the index uh in the

original array was right

um so notice that this took three steps

which is significantly less than here n

equals 7 because 7 is the length of the

array so binary search runs an o of log

n time

again you can think about it similar to

the tree where you're only walking down

one path

instead let's say instead of this sorted

list being put contiguously

it's a tree how many jumps you're going

to have to take in the tree it's login

what paper can implement beginner ml

engineer well i mean that's a deep

what paper can implement a beginning ml

engineer

oh i don't know about that uh yeah data

science is largely bs

anyone who's teaching you if you're ever

learning

a

like an object level skill you're

probably not learning the right thing

object level skills will die out when

the tools die out

but if you're learning kind of

meta-level skills

then they're never going to

it's like truth about the world right um

are you learning

something from nature or are you

learning something from people

right

if you're learning something from nature

good uh if you're learning something

from people

bad right um so you can you can you can

break

pretty much everything down into into

this paradigm if you're learning like

physics comes from nature learning

physics is good if you're learning

celebrity gossip this is just

arbitrary bullshit about people it's bad

um

so you know one of the one of the

founding themes for the college

uh so we reject

uh power over people

um and this will actually make us

ignored by the system

a system cares

deeply about power

over people

embrace power over nature

so yeah um

and then like like like okay so like

answering a question what is data

science right

um if data science if data science means

like

statistics sure

if data science means like um tooling

used

at company x no

let's define f by

for complex s with a positive real part

how do i find

all zeros of the function

that looks oddly like the riemann

hypothesis

um my

most of my math knowledge is in discrete

math

i don't know that much

[Music]

calculus i didn't really know how to do

that i mean i could write a simulator

for that

uh and then we can binary search for

zeros assuming the function's continuous

we can't exactly binary search

uh well those things are going to get

smaller too

complex s with positive real part oh god

i gotta do complex numbers too i don't

really know

um we want to learn how to learn

efficiently learning

strategies i don't know

helm.ai is four years behind

some of these questions like what books

do you recommend how to stay hungry

um elon talks about this a lot right so

you want to build a uh a knowledge tree

right

i build a knowledge tree and that means

that whenever you learn

new information fits into the trade

people who i've met who know

a lot of things it's

not even always that they know um maybe

uh

interpolation

is possible

even if you don't know exactly what's a

note of a tree if you have some nodes

nearby you can kind of interpolate to it

right

um yeah so

it's kind of a framework for

understanding um

you can you can root this knowledge tree

so elon talks about it elon roots

knowledge tree in physics

i root knowledge tree in information

all right so my whole input computation

output

is this this idea of um

information this is a modernist

perspective post-modernist perspective

all right um but but

both of those things are are very very

good ways of understanding

uh so so i mean how to

explain uh anything

i mean you know i some of these were

like how to get a girlfriend right

input system output this is my core

paradigm for understanding anything

this is what richard hamming was

promoted a lot that's that's like like

like a hamming tree guy

coding theory was one of the classes i

took that i couldn't do

it was too hard for me

um i haven't seen

so bezos um

bezos basically uses this this this one

trick

um bazel's operations mastermind right

[Music]

so for example um amazon ships many

packages

uh when amazon negotiates with ups

uh bezos has his guys draw up

a amazon shipping plan right

the plan is uh let's say sales pitch

uh to ups ups

um you know uh

gives real rate right great

pezos wins

and that's that's that is the amazon

trick over and over and over again

uh oh post-structuralism see i like

weird things like this

i really i really want to meet more i

really want to meet more women and

and go on more dates like women who like

study this stuff

you know like like like i met this i

have this dave this one girl at birthday

and she like knew about all this stuff

man

it's it's a whole world it's a whole

world and i try my best to understand it

i feel like i'll always kind of be a

tourist there

um

structuralism proposes that one may

understand human culture by means of a

structure

modeled on language uh this

understanding differs

from concrete reality and abstraction

ideas instead as a third order that

mediates between the two

yeah and then what's downstream of all

this is the is the

is the modern trash yeah

the postmodernists were trolls man

that's i was i was on the phone with my

friend last night and i was like you

know what

i'm a postmodernist like i really i

embrace these

these i hold these truths to be

self-evident

um

yeah yeah bourgeoisie for cow

and they're trolls but they're trolls

who've shaped the modern world

one thing that i wish i'd done

differently when i was younger was

actually i didn't

i rejected almost outright the

humanities

um as being any

uh oh they were trolls people just took

them seriously

i mean they admitted as such i rejected

the humanities is any sort of

uh any sort of source of relevance in my

life

um when as i've grown up i've come to

realize

that

the college and the singularity

the science doesn't matter i i think one

of the greatest

tragedies in history was that these

incredibly intelligent scientists built

a nuclear bomb

and then handed that bomb off to

politicians like they're subservient to

them

what

why

why why is this

why do politicians or those kind of

people have this

power um

so something that is changing uh

throughout history

is power over people um used to be all

used to be everything

all right um if you if you you didn't if

you lived in a tribe

right if you lived in a like a

hunter-gatherer or tribe

um the only thing what what made you

alpha chimp

what made you alpha chimp was was having

power over the other uh the other chimps

uh not having power over nature you

aren't a 10x better hunter there are

there were no 10x better hunters

um but power over people uh

is waning and power over nature

uh is waxing

is the right word

no i don't want top 10 best waxing

salons

what i got waxing like a moon

yeah having increasing its apparent size

i dropped out of philosophy

undergraduate because i realized how

much you were just learning to tell

logically sound stories

to each other about how the world is

i wish i wish there were a place where i

could go to learn

real humanities

it seems like being self-taught in the

humanities is more difficult

um i found a few

you come upon a few texts in there and

there and they're kind of mind-blowing

um start what is literature

uh

yeah you should read this

ah i'm reading that was

kind of the first

when i started to realize that that

there was a huge

path to uh what is what is what is

running a company what is what is being

uh what is being ceo

it's just telling stories all you're

doing is telling stories and

we compete uh the world is a big

competition of these stories

what is the wickensteiner's tiring

debate

i have so much to read i don't know and

i guess

this is a lot of what i've been doing

off stream especially now is is just

it's just reading and i'm not

there's no there's no future in hacking

um there's practically no future in

programming it's not a question of

if the singularity is going to happen

it's a question of when

and what will it look like and it seems

like what it will look like will be a

lot less

shaped by programmers doing the grunt

work and a lot more shaped by who's

telling the best stories

so you know if you want to save the

world better learn how to tell stories

please teach me on becoming an expert in

programming

so wait

hang on what's the central kind of

thesis of

um by the way everybody should read

uh should read turns paper

ramsay wow it's all the same people man

these people are everywhere so all

biologists want to be chemists all

chemists want to be physicists

while physicists want to be

mathematicians all mathematicians want

to be philosophers and all philosophers

want to be employed

um programmers are

are translators yeah uh

right this is this is what most

software engineers do all day

um go learn your stupid frameworks right

but again that's the my

same thing about about data science

right um

you know tooling that

will go out of vogue

no out of vote maybe that's right maybe

that's wrong

uh yeah i met my medic there uh

these basic ideas peter t i read some

new peter kill thing he really went hard

on that

do i think today we have less

revolutionary innovative minds in

general than before no

how many people can you name from the

20th century

like a hundred wait there's there's

there's definitely revolutionary people

around

today i i think i think that who's the

most revolutionary person i think of the

current millennium satoshi nakamoto

if you really want to do things in some

way you got to do them anonymously

ah i mean that that's just

i don't know maybe that's not true but

yeah i mean look

at look at what elon musk is doing right

there there are definitely people

who are alive today who are going to be

remembered in 100 years

i read the annotated turing book yeah

yeah that's why i read the paper uh

i'll i'll show for the book

yeah i recommend that book

what is a good work ethic to have so one

test that i like to use often to ask a

question if somebody's saying something

say would anybody ever say the opposite

right

so if you have a politician who stands

up on stage and says

the children are our future i care about

the children they're not really saying

anything because nobody would ever say

the opposite

so what is a good work ethic to have

i mean it's a meaningless question

because the

like you should slack off a lot

and you know not really pay attention do

things sloppily

yeah said nobody ever

i'm showing for myself man i'm satoshi

uh what's unless wrong

i'm not saying you should do anything

um it's just a framework it's a

framework for thinking

no i see i'm not i'm not i'm really not

interested in answering questions about

myself

why do you care i'm nobody who are you

you're nobody too

oh they're coming after me man oh no

locker doors man

i don't know like it's again people are

boring nature's interesting

i'm a people too i'm pretty boring

have to think about recursion just as a

stack

all right swat on my house oh no this

guy's going to call a swat in my house

no he's not he's banned

crud development will go away yeah but

it will just become

current development will become the most

lowest common denominator

ai shit you know

who's that guy in office space he's like

well i take the thing from the engineers

and i give it to the i talk to the

customer and i give it to the engineers

right

that's all it's going to be

um constructivist mathematics uh

i'm i'm yeah of course

uh so my understanding of constructivism

uh says that you can't the law of the

excluded middle doesn't apply

uh so you can't just make an assumption

find a contradiction and say therefore

the assumption is true

uh you wouldn't this is why i really

like things like cock which

like so they have a constructivist cock

which um

it says if you want to say something's

true you can't just say you can't just

like yeah find a contradiction

uh so i think that

like finitism i believe is true in a

deep philosophical sense um whereas

constructivism

is just another lens uh

where are the differences what can you

not

what can you say in non-constructivist

mathematics

uh that you can't say in constructivist

or just proofs harder

taking the principle of the excluded

middle from the mathematician would be

the same

say as prescribing the telescope to an

astronomer or the box of the use of his

fists

um

yeah so so yeah

ah construct

is google gonna actually give me

anything for this i want

non-constructivist truths

you can't derive in constructivism

oh i'll say

oh god yeah aaron schwartz take down j

store fuck j store

some like learning theory i don't know

about that yeah

what i want to know is like like yeah

what are the truths right and then do

they feel

i don't know i mean i like like

intuitionism as well

um

it's one thing to innovate in the

computer science world but it's another

thing to utilize it to make money which

is where you need translators to deliver

uh so uh what is money

right all

uh i mean okay uh

[Music]

it gets i'm not gonna go into this but

if your goal in life is to make money

all i will say is that is never for

anybody a terminal goal

making money cannot be a terminal goal

right

money money itself does not have any

intrinsic value money only has

always think about what your terminal

values are right

um

this is uh let's find the

slate star codex society

shocks

uh yes

bostrom makes an offhanded reference of

the possibility of a dictatorless

dystopia one that every single citizen

including the leadership

hates but which nevertheless endures

unconquered it's easy enough to imagine

such a state imagine a country with two

rules

first every person must spend eight

hours a day giving themselves strong

electric shocks

second if anyone fails to follow a rule

including this one or speaks out against

there fails to enforce it

all citizens must unite to kill that

person suppose these rules were well

enough established by tradition that

everyone expected them to be enforced

so you shock yourself for eight hours a

day because you know if you don't

everyone else will kill you because if

they don't everyone else will kill them

and so on

i heard the russians used a similar

tactic in order to prevent defection in

world war

ii uh you know a soldier on the front

line who's being told to charge a

machine gun turret might want to run the

other way

but you know it is the job of everybody

behind them to shoot all the cowards

and if you do not shoot a coward you're

a coward yourself and you'll be shot by

somebody else

dictatorless dystopia so

think about what you really want money

for and are we really just in one of

these dictators dystopias

there's my viewer count he's gone

and coward is whatever is defined by the

russian system right

are we running out of innovative ideas

no

oh here we go easy example of a

non-constructivist proof without an

obvious fix

some digit occurs infinitely often in

the decimal expansion of pi

have we proven that

oh some digit occurs okay

perhaps you think of the statement that

every digit occurs infinitely often

which is probably open

yeah um but some digit occurs infinitely

often

uh i mean yeah okay you're right so the

obvious proof there is

assume for the sake of contradiction

that no digits occur

infinitely often then given that there's

a finite number of digits

uh by the pigeonhole principle

pi is not a transcendent number but we

know pi is a transcendent number

uh therefore contradiction

uh qed um

this is another classic one yeah

i mean but i'm sure you can prove that

uh the square root of two's irrational

uh i'm sure you can prove that in a

constraint

constructivist proof

square root to uh irrational

direct proof of irrationality

a simple direct proof that i found as a

teenager

theorem

it can conduct our ideal

what that's confusing

okay theorem is that it's integral

if rational so meaning it's an integer

if it's if it's rational

uh the proof

okay so it's a reduced fraction so the

greatest common divisor is one

uh that's using like the extended

euclidean algorithm

yeah that works sure

yeah there you go it's so much better

it's so much better than the other proof

oh browering can are examples let's say

i think that all of higher education

today is whatever the opposite of based

is you know maybe cupped

uh that's kind of a problem

like there's probably small numbers of

holdouts

in these

tentacles institutions

uh rise of

administration

costs in colleges

uh yeah all right there we go it's it's

there uh put it this way administrative

spending comprised just 26 percent of

total educational spending by american

colleges

uh three decades later admitted no it's

not

wait huh where'd the other spending go

i don't know ah

maybe this isn't true i'm not i'm not

that interested in looking into the case

uh i mean i witnessed this firsthand

i've heard

from speaking with a lot of people uh

just how

this is what i mean

uh that's that's not what i was thinking

of

but

yeah i'm not i'm not i'm not hopeful for

the future of the the higher education

system

uh curtis describes it as a state church

where do i expect newer generations to

learn things like lower level

programming or theory the same place

everyone else did what do you mean

people always say this people say this

about computer science man the kids

aren't really going to learn how

computers work

why because our math majors don't know

how arithmetic works

like that's just a sign that someone was

poorly educated

not it's not going to like fade from the

world people say this but

you know there's been so many other

disciplines and i have no idea why they

think

computer science is going to be

different

look up the journal constructive

approximation

there's so much to learn guys

i don't really know what approximations

and expansions

are

by the way oh i mean unfortunately it's

a web archive but can we look at how

nice this web page is

someone criticized my uh

use of like looking at the

sh the form and not the content but the

form is an

incredibly good predictor of content a

website like this

contains truths because there's no other

reason for someone to build it

unfortunately it's been taken offline

let's see

a website like this probably contains

way less truths

right compare the websites

so now we see what's wrong with uh

colleges

i promise our university

will have a website that looks much more

like this and much less like this

computer architecture or quantitative

approach let's see what we got

college is a funnel society's a funnel

man

what i want to show me the uh

don't show me the table of contents

he's the president of stanford

i tried yeah i click off the kindle

version i i think

i don't think anywhere ah take a look

inside oh cool

see what we got

i mean this is yeah if you want to study

computer architecture that's like a

decent

oh now this is i mean this is from

google what

takes like uh 10 nanoseconds

to get to uh l1 cache

100 nanoseconds to get to l2 takes like

a microsecond to get to memory and it

takes like a millisecond to get to disk

or whatever those numbers are you should

know that understand all of that

memory hierarchy there's an old saying

like there's two hard problems in

computer science

it's like search and caching or

something

um that's the quote

cash and validation and naming things

know that you are problems in computer

science cash and validation naming

things and off by one errors

let's see

cool

how do you get over a thousand people to

watch you rant about how

you they shouldn't need to watch people

like you rant

i don't know we're just hanging out and

like thinking i'm gonna go back to

reading in a bit

i try my ideas out on twitch right i

tried hammer out and decided there's

never gonna be a hammer

fuck hammer um i tried backspace out

and it got a pretty good response on

twitch um

the problems with backspace are more

technical and actually comes down to

more the question of what is programming

right i don't want to make if you want

to do programming for work if you want

to make crud apps like

that's not really what i want to do in

backspace

um i mean the

the problem i ran into with backspace

is like um is

our modern programming languages

already the best way

to describe what you want

how yeah

like yeah what is it is programming

really just describing

is is there a more concise language

that's probably a better way

to is does there

exist a more concise

programming language

um aka

uh what is the next

gc right

object-oriented programming didn't

deliver the improvements garbage

collection did

uh not having to deal with freeing your

memory

um i mean so so

my basic thesis is like uh compilers

should do more search

gc is garbage collection uh so if i

write some

if i write some c code

let's make a function

all right so that's all well and good

except for this fact

see look at a dot out's memory usage

right

it's memory usage is growing and we're

going to have to kill it before it keeps

using more because there's a memory leak

because what happens in this program is

every time a is called

i'm malicking six bytes of memory i'm

taking six bytes

off the heap and even though once this

while loop comes around again those

bytes are never accessible

um it doesn't matter

the compiler the program's already

allocated them so you know to fix this

bug

i can do that

and now we'll see that a dot out does

not increase in memory usage

right so a gc would automatically find

unreachable pointers and free them

yeah so rust has a separate idea russ

has this idea of of uh of ownership

um but it makes rust very very hard to

code

the the beauty of gcs is that they

operate completely in the background and

it would make this a valid program to

run

i could write this in go and go as a gc

and it's fine

if you can find the shortest program

that outputs the data yeah sure um i

shall for the hudder prize a lot

make it subscribers only you never see

my chat i see your chat and you're a

subscriber

um all right

we'll be right back and then we'll do

we'll do subscriber only q a and then go

back to reading

what problems are we solving today no

real problems

shining like a diamond what are you

reading from

i'm almost done with my uh my book from

yesterday white noise

what is this dud baiting twitch prime

dot can we do a meet up before the

singularity

what happens if you pass string copy a

character array without a null

terminator

um i mean it'll just keep copying to

whatever on the stack till it finds it

i'll terminator

is it any indication that we're not

close to an efficient to write language

when we have functional programming

that's so fundamentally different

i mean um are getting better i i'm very

oh man you know what i'd give to code in

the language 20 years from now

oh i'd be so happy

cameo.com what was that

i was just like i can book like famous

people to come to my party

look at personalized messages wow

oh i got to think about my brand you

know

and how to solve constant growth of

misinformation

i mean has that ratio actually gotten

worse

has the ratio of information to

misinformation changed

i'm not sure it has

how does one be motivated oh

this is dumb questions like think of why

that's a dumb question

what are you one one way to ask

if if something's a dumb question or not

is like think about what the structure

of the answer you want is

what kind of structure like like like

what is the space what does the range

look like of the

what does the output space look like

like

you are the kind of person who deserves

google

right because this one weird trick to

stay motivated

is is what you're looking for there and

that's the only answer you're going to

get and it's not a real answer so

your curiosity is never going to be

satiated and you're going to keep

googling that same crap

over and over and over again there's not

an answer

there's less hierarchy and information

distribution

i'm not even sure about that

so think about in some ways there's more

hierarchy right um

oh that's all right let me see if i can

find i wish i had a nice way to index

this book better

um

about families

let's find the exact quote they put in

the book a lot better i'm gonna say it

but

families are held together based on in

um

on untruths and and commonly shared lies

i think that despite

people talking a lot about

misinformation

in in some ways from my perspective when

people are screaming about fake news

what they're actually mad about when

they keep talking about misinformation

is actually that they don't control the

narrative anymore

it's not that the new narratives are any

less true than the old narratives the

old narratives are all lies as well

it's just there's a different kind of

group providing the new narratives the

new narratives are coming from a

different place

and i think there is slightly more true

than the old narratives but only

slightly

any advice to crack fang interviews

all right honestly

if they sit you down and they're like do

two lead code hard problems

this is why i'm not doing lead code on

stream for you guys it's like

why waste your time memorizing that

they're no it's

just insulting i mean i think it's

insulting to to everybody

uh who's being interviewed like

they're not checking to see whether

you're a good programmer or not they're

checking to see whether you're willing

to grind for hours and hours and hours

right delete code grind is real like is

that is that the kind of organization

you want to go work at

an organization that values you just

grinding on something stupid and

irrelevant for hours

um that said i think that uh programming

challenges are an incredible way to

judge

um candidates but

not timed ones right

we have a like

or at least not time crunch in front of

a person

uh we we have a we have a hackering

challenge for for comma

um but we give you four hours and if

you're good you can do it in under an

hour

it's it's not designed to be

it's designed to be a freshman weeder

test not some insane

this is how we're truly going to judge

you

the speed challenge yeah i like the

speed challenge it's kind of

it's more open-ended but it has it's

it's more open-ended but it has a clear

rigid evaluation criteria uh it's an

import it's important to have

interviews that are have clear

evaluation criteria to avoid bias

don't take amphetamines um so

my experience with uh amphetamines

adderall stimulants

is they do not make you better at things

they make you think you're better at

things

they they trigger

this delusion uh

if i am good at something i want to

believe i am good at something if i am

bad at something i want to believe i am

bad at something

nootropics are mostly a scam

i think humanities will ever be able to

escape structures and hierarchies within

nature that

combat transhumanism i'm not sure

exactly what that means

honesty doesn't give deep thoughts it

makes you think all your thoughts are

deep

i have more positive things to say about

lsd than i do about

uh amphetamines

i think lsd shows you something

and uh

i mean like with all drugs you know

understand what it has to teach you and

then stop

i think i want to go to one of those

10-day meditation retreats

uh but i don't know i don't want to talk

about drugs they're not drugs aren't

that interesting

joshua new god of transhumanism

uh what's the happiest memory i don't

really like talking about myself either

most of these things here i don't really

talk about myself i do give anecdotes

for my wife they're

they're more to illustrate a point uh

because anything that i say about myself

is personal and useless to you

don't be like me it's dumb

you know i'm trying to give you

information so you can think

don dele white noise

some of the stories are made up yeah

doesn't matter

uh i've been drinking recess yeah it's

kind of nice

i've never read your class elements all

right cool

um

it's about pascal's wager

pascal's mugging yeah

heh

it's a funny idea

and this is why i'm not a

consequentialist

many mangoes that is kind of funny

things

by oh oh you mean just things in general

oh i felt like things was like uh yeah

of course

web app frameworks like electron why

don't we ship the operating system in

every uh

electron is just docker man it's the

same idea no

i don't want i don't know anything that

makes deployment development easier is

probably good

stanislaw lim

can you think of any fun problems to

tackle in your retails

if you come up with one

hmm no

it is it's in local folder i'm probably

much more likely to lose it than the

cloud

the fuck is a tc if you want a high

tc you gotta play the game

you know what there is a star trek

voyager episode

tc yes treatment coefficient yes

yes critical care yes

just as the doctor asks what tc stands

for

oh total compensation oh you mean the

team blinds

oh my god oh my god

it's pascal's mugging man

yeah i'd like to go to today

the problem is i have to like schedule

it months in advance

worldsignia yt thank you for subscribing

turning into a lizard man i love voyager

growing up you know

i just want to know where i learned

morality from star trek voyager

so whatever janeway believed that i

believe

alright guys thank you for watching the

stream um if you enjoyed today's stream

i'm gonna look at my revenues and if i

got a lot of revenue for this stream

we're gonna do more streams like this

one

but i don't know i'm probably not gonna

stream for a bit

it's the weekend i got things to do that

aren't streaming

uh please subscribe if you haven't

subscribed it

we like subscribers somebody asked me

earlier do i believe that there are

some people are better than others yes i

believe that subscribers are better than

non-subscribers

rex doors thank you for subscribing

can you do an irl stream

should i like rent out a you know you

know like they're hyped on the covet

shit

um

feels good man subs rise up yeah there's

a class system

all twitches aren't equal they're

subscribers and non-subscribers i don't

i don't tell lies you know i'm a flex

thank you for gifting subs um

today's dream is top tier i'm glad you

liked it yeah just get a mask or

something with my mask

that's right let's show it boys

today's flow is better thank you

what's ocsp

oh just some like certification thing

vic jack thank you for subscribing

uh

facetime is still funny um

subscriber power full lidar

you take care too real port your

subscriber your good person

um yeah not have any certifications

don't don't take me over security itself

is all it's all

racket first we got to scare them about

hackers then we got to sell them the

anecdote to hackers antidote yeah

thank you uh ranch leo thank you for

subscribing there's a take on

morality of piracy i don't believe in

universal morality or ethics

make up your own mind man

um anybody who's trying to but i do

dislike anybody who tries to preach to

you morality or ethics

tries to tell you how you should act man

because that's just powerful people

moral relativist i have personal borrows

i talk about yeah like i said i don't

really like talking about my

only streams i don't really think i talk

about like myself

right like even this this is not really

a comment about myself this is a comment

about the content

of the streams

i post more instagram pics

all right well you know what if i find

out about this shit

we're never streaming again you're

banned and you know what people

dm me all the time my dms are full of

can you please unban me yo dude can you

unban me sir yo can you unban me

bro you're banned for life

i don't think jaime was a more relative

of a style that's true

can i ban you i'm not gonna ban you

you're a subscriber

you're a good person

uh good i'm glad

if ro jogen was like a mockery of the

podcast

i would totally go on road joking like a

mockery of that whole format

rojo again yo is there really a road

joking let's check it out

ro jogen

um

laser cap boss you're close to getting

banned

you don't care if you're a subscriber

bro jogin

there's nothing wrong with the format it

has more to do with the reach

this is why i wouldn't go on joe rogan

i just imagined saris wasn't that the

bad guy in galaxy quest

alright guys thank you all for watching

good afternoon learn real things
















